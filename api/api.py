from flask_restful import Resource
from flask import request
from flask import Flask, jsonify
from flask import abort
from datetime import date, datetime, timedelta
import pandas as pd






meters = [
    {
        "meter_id": "2aea444",
        "customer_id": "nsd98f",
        "resolution": "Hour",
        "From": "2018-08-09T00:00:00Z",
        "to": "2018-08-09T23:00:00Z",
        "values": {"2018-08-09T01:00:00Z": 12.4,
                   "2018-08-09T02:00:00Z": 55.4,
                   "2018-08-09T03:00:00Z": 44.4,
                   "2018-08-09T04:00:00Z": 36.4,
                   "2018-08-09T05:00:00Z": 33.4,
                   "2018-08-09T06:00:00Z": 32.2,
                   "2018-08-09T07:00:00Z": 32.6,
                   "2018-08-09T08:00:00Z": 36.4,
                   "2018-08-09T09:00:00Z": 38.4,
                   "2018-08-09T10:00:00Z": 24.4,
                   "2018-08-09T11:00:00Z": 30.1,
                   "2018-08-09T12:00:00Z": 31.4,
                   "2018-08-09T13:00:00Z": 23.4,
                   "2018-08-09T14:00:00Z": 38.4,
                   "2018-08-09T15:00:00Z": 38.2,
                   "2018-08-09T16:00:00Z": 38.4,
                   "2018-08-09T17:00:00Z": 39.4,
                   "2018-08-09T18:00:00Z": 40.2,
                   "2018-08-09T19:00:00Z": 41.8,
                   "2018-08-09T20:00:00Z": 52.4,
                   "2018-08-09T21:00:00Z": 58.7,
                   "2018-08-09T22:00:00Z": 46.4,
                   "2018-08-09T23:00:00Z": 34.4,
                   "2018-08-09T24:00:00Z": 30.8
                   }
    },
{
        "meter_id": "2aea445",
        "customer_id": "nsd99f",
        "resolution": "Hour",
        "From": "2018-08-09T00:00:00Z",
        "to": "2018-08-09T23:00:00Z",
        "values": {"2018-08-09T01:00:00Z": 18.4,
                   "2018-08-09T02:00:00Z": 55.4,
                   "2018-08-09T03:00:00Z": 44.4,
                   "2018-08-09T04:00:00Z": 36.4,
                   "2018-08-09T05:00:00Z": 33.4,
                   "2018-08-09T06:00:00Z": 32.2,
                   "2018-08-09T07:00:00Z": 32.6,
                   "2018-08-09T08:00:00Z": 56.4,
                   "2018-08-09T09:00:00Z": 38.4,
                   "2018-08-09T10:00:00Z": 24.4,
                   "2018-08-09T11:00:00Z": 20.1,
                   "2018-08-09T12:00:00Z": 21.4,
                   "2018-08-09T13:00:00Z": 23.4,
                   "2018-08-09T14:00:00Z": 38.4,
                   "2018-08-09T15:00:00Z": 38.2,
                   "2018-08-09T16:00:00Z": 38.4,
                   "2018-08-09T17:00:00Z": 39.4,
                   "2018-08-09T18:00:00Z": 40.2,
                   "2018-08-09T19:00:00Z": 41.8,
                   "2018-08-09T20:00:00Z": 52.4,
                   "2018-08-09T21:00:00Z": 58.7,
                   "2018-08-09T22:00:00Z": 46.4,
                   "2018-08-09T23:00:00Z": 34.4,
                   "2018-08-09T24:00:00Z": 30.8
                   }
    },
{
        "meter_id": "2aea446",
        "customer_id": "nsd99f",
        "resolution": "Hour",
        "From": "2018-08-09T00:00:00Z",
        "to": "2018-08-09T23:00:00Z",
        "values": {"2018-08-09T01:00:00Z": 19.4,
                   "2018-08-09T02:00:00Z": 55.4,
                   "2018-08-09T03:00:00Z": 44.4,
                   "2018-08-09T04:00:00Z": 36.4,
                   "2018-08-09T05:00:00Z": 33.4,
                   "2018-08-09T06:00:00Z": 32.2,
                   "2018-08-09T07:00:00Z": 42.6,
                   "2018-08-09T08:00:00Z": 56.4,
                   "2018-08-09T09:00:00Z": 38.4,
                   "2018-08-09T10:00:00Z": 24.4,
                   "2018-08-09T11:00:00Z": 20.1,
                   "2018-08-09T12:00:00Z": 21.4,
                   "2018-08-09T13:00:00Z": 23.4,
                   "2018-08-09T14:00:00Z": 38.4,
                   "2018-08-09T15:00:00Z": 38.2,
                   "2018-08-09T16:00:00Z": 38.4,
                   "2018-08-09T17:00:00Z": 39.4,
                   "2018-08-09T18:00:00Z": 20.2,
                   "2018-08-09T19:00:00Z": 41.8,
                   "2018-08-09T20:00:00Z": 52.4,
                   "2018-08-09T21:00:00Z": 38.7,
                   "2018-08-09T22:00:00Z": 46.4,
                   "2018-08-09T23:00:00Z": 34.4,
                   "2018-08-09T24:00:00Z": 30.8
                   }
    },

    {
        "meter_id": "2aea445",
        "customer_id": "nsd98f",
        "resolution": "Hour",
        "From": "2018-08-10T00:00:00Z",
        "to": "2018-08-10T23:00:00Z",
        "values": {"2018-08-10T01:00:00Z": 11.4,
                   "2018-08-10T02:00:00Z": 55.4,
                   "2018-08-10T03:00:00Z": 44.4,
                   "2018-08-10T04:00:00Z": 36.4,
                   "2018-08-10T05:00:00Z": 33.4,
                   "2018-08-10T06:00:00Z": 32.2,
                   "2018-08-10T07:00:00Z": 36.6,
                   "2018-08-10T08:00:00Z": 35.4,
                   "2018-08-10T09:00:00Z": 38.4,
                   "2018-08-10T10:00:00Z": 24.4,
                   "2018-08-10T11:00:00Z": 38.1,
                   "2018-08-10T12:00:00Z": 40.4,
                   "2018-08-10T13:00:00Z": 25.4,
                   "2018-08-10T14:00:00Z": 38.4,
                   "2018-08-10T15:00:00Z": 38.2,
                   "2018-08-10T16:00:00Z": 35.4,
                   "2018-08-10T17:00:00Z": 39.4,
                   "2018-08-10T18:00:00Z": 47.2,
                   "2018-08-10T19:00:00Z": 48.8,
                   "2018-08-10T20:00:00Z": 52.4,
                   "2018-08-10T21:00:00Z": 53.7,
                   "2018-08-10T22:00:00Z": 41.4,
                   "2018-08-10T23:00:00Z": 33.4,
                   "2018-08-10T24:00:00Z": 28.8
                   }
    },
{
        "meter_id": "2aea446",
        "customer_id": "nsd98f",
        "resolution": "Hour",
        "From": "2018-08-11T00:00:00Z",
        "to": "2018-08-11T23:00:00Z",
        "values": {"2018-08-11T01:00:00Z": 10.4,
                   "2018-08-11T02:00:00Z": 55.4,
                   "2018-08-11T03:00:00Z": 44.4,
                   "2018-08-11T04:00:00Z": 36.4,
                   "2018-08-11T05:00:00Z": 33.4,
                   "2018-08-11T06:00:00Z": 32.2,
                   "2018-08-11T07:00:00Z": 36.6,
                   "2018-08-11T08:00:00Z": 35.4,
                   "2018-08-11T09:00:00Z": 38.4,
                   "2018-08-11T10:00:00Z": 34.4,
                   "2018-08-11T11:00:00Z": 38.1,
                   "2018-08-11T12:00:00Z": 40.4,
                   "2018-08-11T13:00:00Z": 35.4,
                   "2018-08-11T14:00:00Z": 38.4,
                   "2018-08-11T15:00:00Z": 68.2,
                   "2018-08-11T16:00:00Z": 55.4,
                   "2018-08-11T17:00:00Z": 39.4,
                   "2018-08-11T18:00:00Z": 47.2,
                   "2018-08-11T19:00:00Z": 48.8,
                   "2018-08-11T20:00:00Z": 52.4,
                   "2018-08-11T21:00:00Z": 53.7,
                   "2018-08-11T22:00:00Z": 41.4,
                   "2018-08-11T23:00:00Z": 33.4,
                   "2018-08-11T24:00:00Z": 28.8
                   }
    },
    {
        "meter_id": "2aea445",
        "customer_id": "nsd98f",
        "resolution": "Hour",
        "From": "2018-08-11T00:00:00Z",
        "to": "2018-08-11T23:00:00Z",
        "values": {"2018-08-11T01:00:00Z": 10.4,
                   "2018-08-11T02:00:00Z": 55.4,
                   "2018-08-11T03:00:00Z": 44.4,
                   "2018-08-11T04:00:00Z": 36.4,
                   "2018-08-11T05:00:00Z": 33.4,
                   "2018-08-11T06:00:00Z": 32.2,
                   "2018-08-11T07:00:00Z": 36.6,
                   "2018-08-11T08:00:00Z": 35.4,
                   "2018-08-11T09:00:00Z": 38.4,
                   "2018-08-11T10:00:00Z": 24.4,
                   "2018-08-11T11:00:00Z": 38.1,
                   "2018-08-11T12:00:00Z": 40.4,
                   "2018-08-11T13:00:00Z": 25.4,
                   "2018-08-11T14:00:00Z": 38.4,
                   "2018-08-11T15:00:00Z": 38.2,
                   "2018-08-11T16:00:00Z": 35.4,
                   "2018-08-11T17:00:00Z": 39.4,
                   "2018-08-11T18:00:00Z": 47.2,
                   "2018-08-11T19:00:00Z": 48.8,
                   "2018-08-11T20:00:00Z": 52.4,
                   "2018-08-11T21:00:00Z": 53.7,
                   "2018-08-11T22:00:00Z": 41.4,
                   "2018-08-11T23:00:00Z": 33.4,
                   "2018-08-11T24:00:00Z": 28.8
                   }
    },
    {
        "meter_id": "2aea445",
        "customer_id": "nsd98f",
        "resolution": "Hour",
        "From": "2018-08-12T00:00:00Z",
        "to": "2018-08-12T23:00:00Z",
        "values": {"2018-08-12T01:00:00Z": 12.5,
                   "2018-08-12T02:00:00Z": 55.4,
                   "2018-08-12T03:00:00Z": 44.4,
                   "2018-08-12T04:00:00Z": 36.4,
                   "2018-08-12T05:00:00Z": 33.4,
                   "2018-08-12T06:00:00Z": 32.2,
                   "2018-08-12T07:00:00Z": 36.6,
                   "2018-08-12T08:00:00Z": 35.4,
                   "2018-08-12T09:00:00Z": 38.4,
                   "2018-08-12T10:00:00Z": 24.4,
                   "2018-08-12T11:00:00Z": 38.1,
                   "2018-08-12T12:00:00Z": 40.4,
                   "2018-08-12T13:00:00Z": 25.4,
                   "2018-08-12T14:00:00Z": 38.4,
                   "2018-08-12T15:00:00Z": 38.2,
                   "2018-08-12T16:00:00Z": 35.4,
                   "2018-08-12T17:00:00Z": 39.4,
                   "2018-08-12T18:00:00Z": 47.2,
                   "2018-08-12T19:00:00Z": 48.8,
                   "2018-08-12T20:00:00Z": 52.4,
                   "2018-08-12T21:00:00Z": 53.7,
                   "2018-08-12T22:00:00Z": 41.4,
                   "2018-08-12T23:00:00Z": 33.4,
                   "2018-08-12T24:00:00Z": 28.8
                   }
    },
    {
        "meter_id": "2aea445",
        "customer_id": "nsd98f",
        "resolution": "Hour",
        "From": "2018-08-13T00:00:00Z",
        "to": "2018-08-13T23:00:00Z",
        "values": {"2018-08-13T01:00:00Z": 11.4,
                   "2018-08-13T02:00:00Z": 55.4,
                   "2018-08-13T03:00:00Z": 44.4,
                   "2018-08-13T04:00:00Z": 36.4,
                   "2018-08-13T05:00:00Z": 33.4,
                   "2018-08-13T06:00:00Z": 32.2,
                   "2018-08-13T07:00:00Z": 36.6,
                   "2018-08-13T08:00:00Z": 35.4,
                   "2018-08-13T09:00:00Z": 38.4,
                   "2018-08-13T10:00:00Z": 24.4,
                   "2018-08-13T11:00:00Z": 38.1,
                   "2018-08-13T12:00:00Z": 40.4,
                   "2018-08-13T13:00:00Z": 25.4,
                   "2018-08-13T14:00:00Z": 38.4,
                   "2018-08-13T15:00:00Z": 38.2,
                   "2018-08-13T16:00:00Z": 35.4,
                   "2018-08-13T17:00:00Z": 39.4,
                   "2018-08-13T18:00:00Z": 47.2,
                   "2018-08-13T19:00:00Z": 48.8,
                   "2018-08-13T20:00:00Z": 52.4,
                   "2018-08-13T21:00:00Z": 53.7,
                   "2018-08-13T22:00:00Z": 41.4,
                   "2018-08-13T23:00:00Z": 33.4,
                   "2018-08-13T24:00:00Z": 28.8
                   }
    },
{
        "meter_id": "2aea447",
        "customer_id": "nsd98f",
        "resolution": "Hour",
        "From": "2018-08-13T00:00:00Z",
        "to": "2018-08-13T23:00:00Z",
        "values": {"2018-08-13T01:00:00Z": 10.4,
                   "2018-08-13T02:00:00Z": 55.4,
                   "2018-08-13T03:00:00Z": 44.4,
                   "2018-08-13T04:00:00Z": 36.4,
                   "2018-08-13T05:00:00Z": 43.4,
                   "2018-08-13T06:00:00Z": 32.2,
                   "2018-08-13T07:00:00Z": 36.6,
                   "2018-08-13T08:00:00Z": 55.4,
                   "2018-08-13T09:00:00Z": 38.4,
                   "2018-08-13T10:00:00Z": 24.4,
                   "2018-08-13T11:00:00Z": 48.1,
                   "2018-08-13T12:00:00Z": 40.4,
                   "2018-08-13T13:00:00Z": 25.4,
                   "2018-08-13T14:00:00Z": 48.4,
                   "2018-08-13T15:00:00Z": 38.2,
                   "2018-08-13T16:00:00Z": 65.4,
                   "2018-08-13T17:00:00Z": 39.4,
                   "2018-08-13T18:00:00Z": 47.2,
                   "2018-08-13T19:00:00Z": 48.8,
                   "2018-08-13T20:00:00Z": 52.4,
                   "2018-08-13T21:00:00Z": 53.7,
                   "2018-08-13T22:00:00Z": 41.4,
                   "2018-08-13T23:00:00Z": 33.4,
                   "2018-08-13T24:00:00Z": 28.8
                   }
    },
{
        "meter_id": "2aea448",
        "customer_id": "nsd98f",
        "resolution": "Hour",
        "From": "2018-08-13T00:00:00Z",
        "to": "2018-08-13T23:00:00Z",
        "values": {"2018-08-13T01:00:00Z": 11.4,
                   "2018-08-13T02:00:00Z": 55.4,
                   "2018-08-13T03:00:00Z": 44.4,
                   "2018-08-13T04:00:00Z": 36.4,
                   "2018-08-13T05:00:00Z": 33.4,
                   "2018-08-13T06:00:00Z": 32.2,
                   "2018-08-13T07:00:00Z": 36.6,
                   "2018-08-13T08:00:00Z": 35.4,
                   "2018-08-13T09:00:00Z": 38.4,
                   "2018-08-13T10:00:00Z": 24.4,
                   "2018-08-13T11:00:00Z": 48.1,
                   "2018-08-13T12:00:00Z": 40.4,
                   "2018-08-13T13:00:00Z": 25.4,
                   "2018-08-13T14:00:00Z": 78.4,
                   "2018-08-13T15:00:00Z": 38.2,
                   "2018-08-13T16:00:00Z": 65.4,
                   "2018-08-13T17:00:00Z": 39.4,
                   "2018-08-13T18:00:00Z": 47.2,
                   "2018-08-13T19:00:00Z": 48.8,
                   "2018-08-13T20:00:00Z": 52.4,
                   "2018-08-13T21:00:00Z": 53.7,
                   "2018-08-13T22:00:00Z": 41.4,
                   "2018-08-13T23:00:00Z": 33.4,
                   "2018-08-13T24:00:00Z": 28.8
                   }
    },
    {
        "meter_id": "2aea445",
        "customer_id": "nsd98f",
        "resolution": "Hour",
        "From": "2018-08-14T00:00:00Z",
        "to": "2018-08-14T23:00:00Z",
        "values": {"2018-08-14T01:00:00Z": 11.8,
                   "2018-08-14T02:00:00Z": 55.4,
                   "2018-08-14T03:00:00Z": 44.4,
                   "2018-08-14T04:00:00Z": 36.4,
                   "2018-08-14T05:00:00Z": 33.4,
                   "2018-08-14T06:00:00Z": 32.2,
                   "2018-08-14T07:00:00Z": 36.6,
                   "2018-08-14T08:00:00Z": 35.4,
                   "2018-08-14T09:00:00Z": 38.4,
                   "2018-08-14T10:00:00Z": 24.4,
                   "2018-08-14T11:00:00Z": 38.1,
                   "2018-08-14T12:00:00Z": 40.4,
                   "2018-08-14T13:00:00Z": 25.4,
                   "2018-08-14T14:00:00Z": 38.4,
                   "2018-08-14T15:00:00Z": 38.2,
                   "2018-08-14T16:00:00Z": 35.4,
                   "2018-08-14T17:00:00Z": 39.4,
                   "2018-08-14T18:00:00Z": 47.2,
                   "2018-08-14T19:00:00Z": 48.8,
                   "2018-08-14T20:00:00Z": 52.4,
                   "2018-08-14T21:00:00Z": 53.7,
                   "2018-08-14T22:00:00Z": 41.4,
                   "2018-08-14T23:00:00Z": 33.4,
                   "2018-08-14T24:00:00Z": 28.8
                   }
    },
    {
        "meter_id": "2aea445",
        "customer_id": "nsd98f",
        "resolution": "Hour",
        "From": "2018-08-15T00:00:00Z",
        "to": "2018-08-15T23:00:00Z",
        "values": {"2018-08-15T01:00:00Z": 10.9,
                   "2018-08-15T02:00:00Z": 55.4,
                   "2018-08-15T03:00:00Z": 44.4,
                   "2018-08-15T04:00:00Z": 36.4,
                   "2018-08-15T05:00:00Z": 33.4,
                   "2018-08-15T06:00:00Z": 32.2,
                   "2018-08-15T07:00:00Z": 36.6,
                   "2018-08-15T08:00:00Z": 35.4,
                   "2018-08-15T09:00:00Z": 38.4,
                   "2018-08-15T10:00:00Z": 24.4,
                   "2018-08-15T11:00:00Z": 38.1,
                   "2018-08-15T12:00:00Z": 40.4,
                   "2018-08-15T13:00:00Z": 25.4,
                   "2018-08-15T14:00:00Z": 38.4,
                   "2018-08-15T15:00:00Z": 38.2,
                   "2018-08-15T16:00:00Z": 35.4,
                   "2018-08-15T17:00:00Z": 39.4,
                   "2018-08-15T18:00:00Z": 47.2,
                   "2018-08-15T19:00:00Z": 48.8,
                   "2018-08-15T20:00:00Z": 52.4,
                   "2018-08-15T21:00:00Z": 53.7,
                   "2018-08-15T22:00:00Z": 41.4,
                   "2018-08-15T23:00:00Z": 33.4,
                   "2018-08-15T24:00:00Z": 28.8
                   }
    },
{
        "meter_id": "2aea450",
        "customer_id": "nsd98f",
        "resolution": "Hour",
        "From": "2018-08-15T00:00:00Z",
        "to": "2018-08-15T23:00:00Z",
        "values": {"2018-08-15T01:00:00Z": 15.9,
                   "2018-08-15T02:00:00Z": 55.4,
                   "2018-08-15T03:00:00Z": 44.4,
                   "2018-08-15T04:00:00Z": 36.4,
                   "2018-08-15T05:00:00Z": 33.4,
                   "2018-08-15T06:00:00Z": 32.2,
                   "2018-08-15T07:00:00Z": 36.6,
                   "2018-08-15T08:00:00Z": 35.4,
                   "2018-08-15T09:00:00Z": 58.4,
                   "2018-08-15T10:00:00Z": 24.4,
                   "2018-08-15T11:00:00Z": 38.1,
                   "2018-08-15T12:00:00Z": 40.4,
                   "2018-08-15T13:00:00Z": 25.4,
                   "2018-08-15T14:00:00Z": 38.4,
                   "2018-08-15T15:00:00Z": 28.2,
                   "2018-08-15T16:00:00Z": 35.4,
                   "2018-08-15T17:00:00Z": 59.4,
                   "2018-08-15T18:00:00Z": 47.2,
                   "2018-08-15T19:00:00Z": 48.8,
                   "2018-08-15T20:00:00Z": 52.4,
                   "2018-08-15T21:00:00Z": 53.7,
                   "2018-08-15T22:00:00Z": 41.4,
                   "2018-08-15T23:00:00Z": 33.4,
                   "2018-08-15T24:00:00Z": 28.8
                   }
    },
{
        "meter_id": "2aea451",
        "customer_id": "nsd98f",
        "resolution": "Hour",
        "From": "2018-08-16T00:00:00Z",
        "to": "2018-08-16T23:00:00Z",
        "values": {"2018-08-16T01:00:00Z": 13.9,
                   "2018-08-16T02:00:00Z": 55.4,
                   "2018-08-16T03:00:00Z": 44.4,
                   "2018-08-16T04:00:00Z": 36.4,
                   "2018-08-16T05:00:00Z": 33.4,
                   "2018-08-16T06:00:00Z": 32.2,
                   "2018-08-16T07:00:00Z": 36.6,
                   "2018-08-16T08:00:00Z": 35.4,
                   "2018-08-16T09:00:00Z": 38.4,
                   "2018-08-16T10:00:00Z": 24.4,
                   "2018-08-16T11:00:00Z": 28.1,
                   "2018-08-16T12:00:00Z": 40.4,
                   "2018-08-16T13:00:00Z": 25.4,
                   "2018-08-16T14:00:00Z": 38.4,
                   "2018-08-16T15:00:00Z": 48.2,
                   "2018-08-16T16:00:00Z": 65.4,
                   "2018-08-16T17:00:00Z": 39.4,
                   "2018-08-16T18:00:00Z": 47.2,
                   "2018-08-16T19:00:00Z": 48.8,
                   "2018-08-16T20:00:00Z": 52.4,
                   "2018-08-16T21:00:00Z": 53.7,
                   "2018-08-16T22:00:00Z": 41.4,
                   "2018-08-16T23:00:00Z": 33.4,
                   "2018-08-16T24:00:00Z": 28.8
                   }
    },
{
        "meter_id": "2aea451",
        "customer_id": "nsd98f",
        "resolution": "Hour",
        "From": "2018-08-17T00:00:00Z",
        "to": "2018-08-17T23:00:00Z",
        "values": {"2018-08-17T01:00:00Z": 10.9,
                   "2018-08-17T02:00:00Z": 55.4,
                   "2018-08-17T03:00:00Z": 44.4,
                   "2018-08-17T04:00:00Z": 36.4,
                   "2018-08-17T05:00:00Z": 33.4,
                   "2018-08-17T06:00:00Z": 32.2,
                   "2018-08-17T07:00:00Z": 36.6,
                   "2018-08-17T08:00:00Z": 35.4,
                   "2018-08-17T09:00:00Z": 38.4,
                   "2018-08-17T10:00:00Z": 24.4,
                   "2018-08-17T11:00:00Z": 28.1,
                   "2018-08-17T12:00:00Z": 40.4,
                   "2018-08-17T13:00:00Z": 25.4,
                   "2018-08-17T14:00:00Z": 38.4,
                   "2018-08-1T15:00:00Z": 48.2,
                   "2018-08-17T16:00:00Z": 35.4,
                   "2018-08-17T17:00:00Z": 39.4,
                   "2018-08-17T18:00:00Z": 47.2,
                   "2018-08-17T19:00:00Z": 48.8,
                   "2018-08-17T20:00:00Z": 62.4,
                   "2018-08-17T21:00:00Z": 53.7,
                   "2018-08-17T22:00:00Z": 41.4,
                   "2018-08-17T23:00:00Z": 33.4,
                   "2018-08-17T24:00:00Z": 28.8
                   }
    },{
        "meter_id": "2aea451",
        "customer_id": "nsd98f",
        "resolution": "Hour",
        "From": "2018-08-18T00:00:00Z",
        "to": "2018-08-18T23:00:00Z",
        "values": {"2018-08-18T01:00:00Z": 11.9,
                   "2018-08-18T02:00:00Z": 55.4,
                   "2018-08-18T03:00:00Z": 44.4,
                   "2018-08-18T04:00:00Z": 36.4,
                   "2018-08-18T05:00:00Z": 33.4,
                   "2018-08-18T06:00:00Z": 32.2,
                   "2018-08-18T07:00:00Z": 36.6,
                   "2018-08-18T08:00:00Z": 35.4,
                   "2018-08-18T09:00:00Z": 38.4,
                   "2018-08-18T10:00:00Z": 24.4,
                   "2018-08-18T11:00:00Z": 28.1,
                   "2018-08-18T12:00:00Z": 40.4,
                   "2018-08-18T13:00:00Z": 25.4,
                   "2018-08-18T14:00:00Z": 38.4,
                   "2018-08-18T15:00:00Z": 48.2,
                   "2018-08-18T16:00:00Z": 35.4,
                   "2018-08-18T17:00:00Z": 39.4,
                   "2018-08-18T18:00:00Z": 47.2,
                   "2018-08-18T19:00:00Z": 48.8,
                   "2018-08-18T20:00:00Z": 62.4,
                   "2018-08-18T21:00:00Z": 53.7,
                   "2018-08-18T22:00:00Z": 41.4,
                   "2018-08-18T23:00:00Z": 33.4,
                   "2018-08-18T24:00:00Z": 28.8
                   }
    }

]

class Meter(Resource):
    # @app.route('/measure/meters', methods=['GET'])
    def get(self):
        return jsonify(
            {
                'success': True,
                'meters': meters
            })

    def post(self):
        data = request.get_json()
        if data is None:
            raise ValueError
        meters.append(data)
        return jsonify(
            {
                'success': True,
                'meters': meters
            })


        # task = {
        #     'meter_id': request.json['meter_id'],
        #     'customer_id': request.json['customer_id'],
        #     'resolution': request.json['resolution'],
        #     'fromDate': request.json['from'],
        #     'toDate': request.json['to'],
        #     'valus': request.get_json['valus'],
        # }
        # meters.append(task)
        # return jsonify({'task': task})


class Meter_Id(Resource):
    def get(self, m_id):
        meter = [meter for meter in meters if meter['meter_id'] == m_id]
        if len(meter) == 0:
            abort(404)
        return jsonify(
            {
                'meter': meter[0]
            })


class Customer_Id(Resource):
    def get(self, c_id):
        customer = [customer for customer in meters if customer['customer_id'] == c_id]
        if len(customer) == 0:
            abort(404)
        return jsonify(
            {
                'customer': customer[0]
            })


def toDate(dateString):
    return datetime.strptime(dateString, "%Y-%m-%d").date()

class get_query_all_meters(Resource):
    def get(self):
        From_C = request.args.get('From',default = date.today(), type = toDate)
        # From_C = datetime.strptime(From, "%Y-%m-%dT%H:%M:%SZ")
        to_C = request.args.get('to',default = date.today(), type = toDate)
        # to_C = datetime.strptime(to, "%Y-%m-%dT%H:%M:%SZ")
        week= From_C + timedelta(weeks=1)

        usage = []
        daily_usage = []
        delta = week - From_C
        for i in range(delta.days + 1):
            for d in meters:
                for key in d:
                    result = d[key]
                usage.append(result.values())

        for i in usage:
            d = int(sum((i)))
            daily_usage.append(d)
            weekly_usage = sum(daily_usage)
                # print('usage:', weekly_usage)


        return '''From : {}
                  to : {}
                  A week : {}
                  weekly_usage for all meters : {}
               '''.format(From_C,to_C,week, weekly_usage)


class get_query_each_meters(Resource):
    def get(self):

        meterID = request.args.get('meterID')
        From_C = request.args.get('From', default=date.today(), type=toDate)
        # From_C = datetime.strptime(From, "%Y-%m-%dT%H:%M:%SZ")
        to_C = request.args.get('to', default=date.today(), type=toDate)
        # to_C = datetime.strptime(to, "%Y-%m-%dT%H:%M:%SZ")
        week = From_C + timedelta(weeks=1)

        usage = []
        d_usage = []
        delta = week - From_C
        for i in range(delta.days + 1):
            for d in meters:
                if meterID in d:
                    for key in d:
                        resu = d[key]
                    usage.append(resu.values())

            for i in usage:
                d = int(sum((i)))
                d_usage.append(d)
                Weekly_M = sum(d_usage)
                # print('usage:', Weekly_M)


            return '''
                    meterID : {}
                    From : {}
                    to : {}
                    A week : {}
                   '''.format(meterID, From_C, to_C, week)









# for d in meters:
#     result = d['From']
#     res = d['to']
#     From_string = result.split('T')[0]
#     to_string = result.split('T')[0]
#     From_val = datetime.strptime(From_string, "%Y-%m-%d").date()
#     to_val = datetime.strptime(to_string, "%Y-%m-%d").date()
    # print (From_val)
    # print (to_val)

#Get the values in "values"_key
# usage = []
# for d in meters:
#     for key in d:
#         result = d[key]
#         usage.append(result.values())
#
# print (usage)
# # print((usage[0]))
# # print(sum(usage[0]))

# sum values in "values"_key

# daily_usage =[]
# for i in usage:
#     d = int(sum((i)))
#     daily_usage.append(d)
#
# print(daily_usage)






# PANDA **********

# usage = []
# for d in meters:
#     for key in d:
#         result = d[key]
#     usage.append(result.values())

# print (usage)
# print((usage[0]))
# print(sum(usage[0]))

# df = pd.DataFrame(meters)
# df['Timestamp'] = df['from'] + df['to']
#
#
# daily_usage =[]
# for i in usage:
#     d = int(sum((i)))
#     daily_usage.append(d)


# print(daily_usage)


# #add daily_usage in data
# df['Daily_usage']= daily_usage
#
# df['from'] = pd.to_datetime(df['from'])
# df['to'] = pd.to_datetime(df['to'])
# # df = df.set_index('from','to')
# # print(df)
#
# start_date = '2018-08-09'
# end_date =  '2018-08-17'
# meter_id = '2aea453'
#
# df1 = df.loc[(df['from']>start_date) & (df['to']<=end_date)]
# print(df1['from'])
# Weekly_usage = df1['Daily_usage'].sum()
#
# print("Weekly_usage is",Weekly_usage,"for all 'meters'.")


# df_Groupby = df.groupby(['from','to', 'meter_id']).sum()
# print(df_Groupby)

#